!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CONSOLE_VGA_IO_H	../../include/UI/console_vga_io.h	2;"	d
FILE_DEV	../../include/IO/file_operations.h	9;"	d
FILE_H	../../include/IO/file.h	2;"	d
FILE_NONE	../../include/IO/file_operations.h	6;"	d
FILE_OPERATIONS_H	../../include/IO/file_operations.h	2;"	d
FILE_VGA	../../include/IO/file_operations.h	7;"	d
MAX_FILE_OPEN	../../include/IO/file.h	6;"	d
MAX_REG_FILEOPT	../../IO/file_operations.c	3;"	d	file:
TYPE_H	../../include/type.h	2;"	d
VGA_IO_EACHLINE	../../UI/console/vga_io.c	6;"	d	file:
VGA_RAM	../../UI/console/vga_io.c	3;"	d	file:
VGA_RAM_BUFFER	../../UI/console/vga_io.c	4;"	d	file:
close	../../IO/file.c	/^void close(uint32_t fd){$/;"	f
close	../../include/IO/file_operations.h	/^    f_close close;$/;"	m	struct:file_operations
f_close	../../include/IO/file_operations.h	/^typedef void (*f_close)(uint32_t );$/;"	t
f_open	../../include/IO/file_operations.h	/^typedef uint32_t (*f_open)(int8_t* fpath);$/;"	t
f_read	../../include/IO/file_operations.h	/^typedef uint32_t (*f_read)(int8_t* buffer,int rsize);$/;"	t
f_seek	../../include/IO/file_operations.h	/^typedef uint32_t (*f_seek)(uint32_t off);$/;"	t
f_setup	../../include/IO/file_operations.h	/^typedef uint32_t (*f_setup)(uint32_t opt,uint8_t* buffer);$/;"	t
f_write	../../include/IO/file_operations.h	/^typedef uint32_t (*f_write)(int8_t* buffer,int wsize);$/;"	t
file	../../include/IO/file.h	/^struct file {$/;"	s
file_op	../../include/IO/file.h	/^    struct file_operations *file_op;$/;"	m	struct:file	typeref:struct:file::file_operations
file_operations	../../include/IO/file_operations.h	/^struct file_operations{$/;"	s
files	../../IO/file.c	/^static struct file files[MAX_FILE_OPEN];$/;"	v	typeref:struct:file	file:
filesetup	../../IO/file.c	/^int32_t filesetup(uint32_t fd,uint32_t opt,int8_t* buffer){$/;"	f
find_filedesc_i	../../IO/file.c	/^static int32_t find_filedesc_i(){$/;"	f	file:
find_fileoperations	../../IO/file_operations.c	/^struct file_operations* find_fileoperations(uint32_t filetype){$/;"	f
ftype	../../include/IO/file.h	/^    uint32_t ftype;$/;"	m	struct:file
int16_t	../../include/type.h	15;"	d
int32_t	../../include/type.h	8;"	d
int64_t	../../include/type.h	5;"	d
int8_t	../../include/type.h	13;"	d
open	../../IO/file.c	/^int32_t open(int8_t* fpath){$/;"	f
open	../../include/IO/file_operations.h	/^    f_open open;$/;"	m	struct:file_operations
opt	../../IO/file_operations.c	/^    struct file_operations* opt;$/;"	m	struct:reg_file_operations	typeref:struct:reg_file_operations::file_operations	file:
read	../../IO/file.c	/^int32_t read(uint32_t fd,int8_t* buffer,uint32_t rsize){$/;"	f
read	../../include/IO/file_operations.h	/^    f_read read;$/;"	m	struct:file_operations
reg_file_operations	../../IO/file_operations.c	/^struct reg_file_operations{$/;"	s	file:
reg_filetype	../../IO/file_operations.c	/^struct reg_file_operations reg_filetype[MAX_REG_FILEOPT];$/;"	v	typeref:struct:reg_file_operations
reg_top	../../IO/file_operations.c	/^static uint8_t reg_top = 0;$/;"	v	file:
reg_type	../../IO/file_operations.c	/^    uint32_t reg_type;$/;"	m	struct:reg_file_operations	file:
register_fileoperations	../../IO/file_operations.c	/^void register_fileoperations(uint32_t filetype,struct file_operations* fop){$/;"	f
seek	../../IO/file.c	/^int32_t seek(uint32_t fd,uint32_t off){$/;"	f
seek	../../include/IO/file_operations.h	/^    f_seek seek;$/;"	m	struct:file_operations
setup	../../include/IO/file_operations.h	/^    f_setup setup;$/;"	m	struct:file_operations
uint16_t	../../include/type.h	14;"	d
uint32_t	../../include/type.h	9;"	d
uint64_t	../../include/type.h	6;"	d
uint8_t	../../include/type.h	12;"	d
unregister_fileoperations	../../IO/file_operations.c	/^void unregister_fileoperations(uint32_t filetype){$/;"	f
write	../../IO/file.c	/^int32_t write(uint32_t fd,int8_t* buffer,uint32_t wsize){$/;"	f
write	../../include/IO/file_operations.h	/^    f_write write;$/;"	m	struct:file_operations
