!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR	Makefile	/^AR=$(CROSS_COMPILER)-ar$/;"	m
CC	Makefile	/^CC=$(CROSS_COMPILER)-gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-m32 -I.\/include\/kernel\/ -I.\/include\/bootsec\/$/;"	m
COLOR_BLACK	kernel/include/UI/console_vga_io.h	11;"	d
COLOR_BLUE	kernel/include/UI/console_vga_io.h	10;"	d
COLOR_GREEN	kernel/include/UI/console_vga_io.h	9;"	d
COLOR_I	kernel/include/UI/console_vga_io.h	7;"	d
COLOR_K	kernel/include/UI/console_vga_io.h	5;"	d
COLOR_RED	kernel/include/UI/console_vga_io.h	8;"	d
COLOR_WHITE	kernel/include/UI/console_vga_io.h	12;"	d
CONSOLE_VGA_IO_H	kernel/include/UI/console_vga_io.h	2;"	d
CROSS_COMPILER	Makefile	/^CROSS_COMPILER=\/usr\/local\/i386elfgcc\/bin\/i386-elf$/;"	m
FILEOPT_VGA_SETUPCOLOR	kernel/include/UI/console_vga_io.h	14;"	d
FILE_DEV	kernel/include/IO/file_operations.h	9;"	d
FILE_H	kernel/include/IO/file.h	2;"	d
FILE_NONE	kernel/include/IO/file_operations.h	6;"	d
FILE_OPERATIONS_H	kernel/include/IO/file_operations.h	2;"	d
FILE_VGA	kernel/include/IO/file_operations.h	7;"	d
LD	Makefile	/^LD=$(CROSS_COMPILER)-ld$/;"	m
MAX_FILE_OPEN	kernel/include/IO/file.h	6;"	d
MAX_REG_FILEOPT	kernel/IO/file_operations.c	3;"	d	file:
SELECTOR_CODE	mbr/mbr.asm	/^SELECTOR_CODE equ 0x0008$/;"	d
TYPE_H	kernel/include/type.h	2;"	d
VGA_BASIC_IO_H	kernel/include/UI/vga_basic_io.h	2;"	d
VGA_IO_EACHLINE	kernel/UI/console/vga_io.c	7;"	d	file:
VGA_RAM_BUFFER	kernel/UI/console/vga_io.c	5;"	d	file:
VGA_RAM_END	kernel/UI/console/vga_io.c	4;"	d	file:
VGA_RAM_START	kernel/UI/console/vga_io.c	3;"	d	file:
ascii	kernel/UI/console/vga_io.c	/^    uint8_t ascii;$/;"	m	struct:console_vga	file:
bg_color	kernel/UI/console/vga_io.c	/^    uint8_t bg_color:4;$/;"	m	struct:console_vga	file:
bg_color	kernel/UI/console/vga_io.c	/^    uint8_t bg_color:4;$/;"	m	struct:console_vga_config	file:
call	mbr/mbr.asm	/^call .readdisk$/;"	l
call	mbr/mbr.asm	/^call .set_protect$/;"	l
close	kernel/IO/file.c	/^void close(uint32_t fd){$/;"	f
close	kernel/include/IO/file_operations.h	/^    f_close close;$/;"	m	struct:file_operations
console_vga	kernel/UI/console/vga_io.c	/^struct console_vga {$/;"	s	file:
console_vga_config	kernel/UI/console/vga_io.c	/^struct console_vga_config {$/;"	s	file:
curpos	kernel/UI/console/vga_io.c	/^    uint32_t curpos;$/;"	m	struct:console_vga_config	file:
db	mbr/mbr.asm	/^db 0x55,0xaa$/;"	l
f_close	kernel/include/IO/file_operations.h	/^typedef void (*f_close)(uint32_t );$/;"	t
f_open	kernel/include/IO/file_operations.h	/^typedef uint32_t (*f_open)(int8_t* fpath);$/;"	t
f_read	kernel/include/IO/file_operations.h	/^typedef uint32_t (*f_read)(int8_t* buffer,int rsize);$/;"	t
f_seek	kernel/include/IO/file_operations.h	/^typedef uint32_t (*f_seek)(uint32_t off);$/;"	t
f_setup	kernel/include/IO/file_operations.h	/^typedef uint32_t (*f_setup)(uint32_t opt,uint8_t* buffer);$/;"	t
f_write	kernel/include/IO/file_operations.h	/^typedef uint32_t (*f_write)(int8_t* buffer,int wsize);$/;"	t
file	kernel/include/IO/file.h	/^struct file {$/;"	s
file_op	kernel/include/IO/file.h	/^    struct file_operations *file_op;$/;"	m	struct:file	typeref:struct:file::file_operations
file_operations	kernel/include/IO/file_operations.h	/^struct file_operations{$/;"	s
fileoperations_init	kernel/IO/file_operations.c	/^void fileoperations_init(void){$/;"	f
files	kernel/IO/file.c	/^static struct file files[MAX_FILE_OPEN];$/;"	v	typeref:struct:file	file:
filesetup	kernel/IO/file.c	/^int32_t filesetup(uint32_t fd,uint32_t opt,int8_t* buffer){$/;"	f
find_filedesc_i	kernel/IO/file.c	/^static int32_t find_filedesc_i(){$/;"	f	file:
find_fileoperations	kernel/IO/file_operations.c	/^struct file_operations* find_fileoperations(uint32_t filetype){$/;"	f
ftype	kernel/include/IO/file.h	/^    uint32_t ftype;$/;"	m	struct:file
int16_t	kernel/include/type.h	15;"	d
int32_t	kernel/include/type.h	8;"	d
int64_t	kernel/include/type.h	5;"	d
int8_t	kernel/include/type.h	13;"	d
jmp	mbr/mbr.asm	/^jmp dword SELECTOR_CODE:0x10000$/;"	l
kernel_obj	Makefile	/^kernel_obj=.\/kernel\/bootinit\/bootsec.o \\$/;"	m
kernel_target	Makefile	/^kernel_target=kernel.bin$/;"	m
mbr_file	Makefile	/^mbr_file=.\/mbr\/mbr.asm$/;"	m
mbr_target	Makefile	/^mbr_target=mbr.bin$/;"	m
mov	mbr/mbr.asm	/^mov eax,0x10000$/;"	l
open	kernel/IO/file.c	/^int32_t open(int8_t* fpath){$/;"	f
open	kernel/include/IO/file_operations.h	/^    f_open open;$/;"	m	struct:file_operations
opt	kernel/IO/file_operations.c	/^    struct file_operations* opt;$/;"	m	struct:reg_file_operations	typeref:struct:reg_file_operations::file_operations	file:
pg_color	kernel/UI/console/vga_io.c	/^    uint8_t pg_color:4;$/;"	m	struct:console_vga	file:
pg_color	kernel/UI/console/vga_io.c	/^    uint8_t pg_color:4;$/;"	m	struct:console_vga_config	file:
printf	kernel/UI/console/vga_basic_io.c	/^int32_t printf(const int8_t* fmt, ...){$/;"	f
read	kernel/IO/file.c	/^int32_t read(uint32_t fd,int8_t* buffer,uint32_t rsize){$/;"	f
read	kernel/include/IO/file_operations.h	/^    f_read read;$/;"	m	struct:file_operations
reg_file_operations	kernel/IO/file_operations.c	/^struct reg_file_operations{$/;"	s	file:
reg_filetype	kernel/IO/file_operations.c	/^struct reg_file_operations reg_filetype[MAX_REG_FILEOPT];$/;"	v	typeref:struct:reg_file_operations
reg_top	kernel/IO/file_operations.c	/^static uint8_t reg_top = 0;$/;"	v	file:
reg_type	kernel/IO/file_operations.c	/^    uint32_t reg_type;$/;"	m	struct:reg_file_operations	file:
register_fileoperations	kernel/IO/file_operations.c	/^void register_fileoperations(uint32_t filetype,struct file_operations* fop){$/;"	f
section	mbr/mbr.asm	/^section .code vstart=0x7c00$/;"	l
seek	kernel/IO/file.c	/^int32_t seek(uint32_t fd,uint32_t off){$/;"	f
seek	kernel/include/IO/file_operations.h	/^    f_seek seek;$/;"	m	struct:file_operations
setup	kernel/include/IO/file_operations.h	/^    f_setup setup;$/;"	m	struct:file_operations
times	mbr/mbr.asm	/^times 510-($-$$) db 0$/;"	l
uint16_t	kernel/include/type.h	14;"	d
uint32_t	kernel/include/type.h	9;"	d
uint64_t	kernel/include/type.h	6;"	d
uint8_t	kernel/include/type.h	12;"	d
unregister_fileoperations	kernel/IO/file_operations.c	/^void unregister_fileoperations(uint32_t filetype){$/;"	f
vga_config	kernel/UI/console/vga_io.c	/^} vga_config = {COLOR_BLACK,COLOR_WHITE|COLOR_I,0};$/;"	v	typeref:struct:console_vga_config
vga_foperation	kernel/UI/console/vga_io.c	/^struct file_operations vga_foperation = {$/;"	v	typeref:struct:file_operations
vga_init	kernel/UI/console/vga_io.c	/^void vga_init(void){$/;"	f
vga_seek	kernel/UI/console/vga_io.c	/^int32_t vga_seek(uint32_t off){$/;"	f
vga_setup	kernel/UI/console/vga_io.c	/^int32_t vga_setup(uint32_opt,uint8_t* buffer){$/;"	f
vga_write	kernel/UI/console/vga_io.c	/^int32_t vga_write(uint8_t *buffer, uint32_t nsize){$/;"	f
vga_write_sigle	kernel/UI/console/vga_io.c	/^void vga_write_sigle(uint8_t ascii){$/;"	f
write	kernel/IO/file.c	/^int32_t write(uint32_t fd,int8_t* buffer,uint32_t wsize){$/;"	f
write	kernel/include/IO/file_operations.h	/^    f_write write;$/;"	m	struct:file_operations
